import boto3
import os
import json

cw_client = boto3.client("cloudwatch")
ssm_client = boto3.client("ssm")

def lambda_handler(event, context):
    print("Received event:", json.dumps(event))

    # 複合アラーム名をイベントから取得
    composite_alarm_name = event.get("detail", {}).get("alarmName")
    if not composite_alarm_name:
        raise Exception("No composite alarm name in event")

    # 複合アラームの子アラーム一覧を取得
    children_resp = cw_client.describe_alarms(ChildrenOfAlarmName=composite_alarm_name)
    child_alarms = children_resp.get("MetricAlarms", []) + children_resp.get("CompositeAlarms", [])

    # ALARM 状態の子アラームだけを抽出
    alarm_children_in_alarm = [a["AlarmName"] for a in child_alarms if a["StateValue"] == "ALARM"]

    # 子アラームの詳細を取得
    metric_alarms = []
    if alarm_children_in_alarm:
        detail_resp = cw_client.describe_alarms(AlarmNames=alarm_children_in_alarm)
        metric_alarms = detail_resp.get("MetricAlarms", [])

    # InstanceId を抽出
    instance_ids = []
    for alarm in metric_alarms:
        for dim in alarm.get("Dimensions", []):
            if dim["Name"] == "InstanceId":
                instance_ids.append(dim["Value"])

    if not instance_ids:
        raise Exception("No InstanceId found in child alarms")

    # SSM Automation を実行
    automation_doc_name = os.environ.get("AUTOMATION_DOCUMENT_NAME", "test")
    for instance_id in instance_ids:
        response = ssm_client.start_automation_execution(
            DocumentName=automation_doc_name,
            Parameters={"UnhealthyInstanceId": [instance_id]}
        )
        print(f"Started Automation for {instance_id}, ExecutionId={response['AutomationExecutionId']}")

    return {"status": "ok", "instances": instance_ids}
