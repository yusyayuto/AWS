import os, json, logging, boto3

log = logging.getLogger()
log.setLevel(logging.INFO)

cw  = boto3.client("cloudwatch")
ssm = boto3.client("ssm")

RUNBOOK_NAME        = os.environ.get("RUNBOOK_NAME", "test")
RUNBOOK_VERSION     = os.environ.get("RUNBOOK_VERSION", "$LATEST")
AUTOMATION_ROLE_ARN = os.environ.get("AUTOMATION_ROLE_ARN")
PARAM_NAME          = os.environ.get("PARAM_NAME", "UnhealthyInstanceId")

def _first_instance_id_from_metric_alarm(alarm: dict) -> str | None:
    # 単一メトリクス型
    for d in alarm.get("Dimensions", []) or []:
        if (d.get("Name") or "").lower() in ("instanceid", "instance_id"):
            v = d.get("Value")
            if isinstance(v, str) and v:
                return v
    # メトリックマス（Metrics[].MetricStat.Metric.Dimensions）
    for mm in alarm.get("Metrics", []) or []:
        metric = (mm.get("MetricStat") or {}).get("Metric") or {}
        for d in metric.get("Dimensions", []) or []:
            if (d.get("Name") or "").lower() in ("instanceid", "instance_id"):
                v = d.get("Value")
                if isinstance(v, str) and v:
                    return v
    return None

def lambda_handler(event, context):
    detail = event.get("detail") or {}
    comp   = detail.get("alarmName")
    state  = (detail.get("state") or {}).get("value")
    if not comp:
        raise ValueError("detail.alarmName is required")

    # 1) 複合アラームの子アラーム名を取得
    pages = cw.get_paginator("describe_alarms").paginate(ChildrenOfAlarmName=comp)
    child_metric_alarm_names = []
    for p in pages:
        child_metric_alarm_names.extend([a["AlarmName"] for a in p.get("MetricAlarms", []) or []])
        # 子に複合があっても、最終的に MetricAlarms が集まるまでページングが進む

    if not child_metric_alarm_names:
        raise RuntimeError(f"No metric child alarms under composite '{comp}'")

    # 2) 子アラーム詳細を名前で取得し、最初に見つかった InstanceId を使う（発砲有無は不問）
    instance_id = None
    # AlarmNames は最大100件までまとめて可。数が多い場合は分割して呼ぶ
    for i in range(0, len(child_metric_alarm_names), 100):
        names_slice = child_metric_alarm_names[i:i+100]
        resp = cw.describe_alarms(AlarmNames=names_slice)
        for alarm in resp.get("MetricAlarms", []) or []:
            iid = _first_instance_id_from_metric_alarm(alarm)
            if iid:
                instance_id = iid
                break
        if instance_id:
            break

    if not instance_id:
        raise RuntimeError(f"InstanceId not found in any child alarm of '{comp}'")

    # 3) SSM Automation 起動（複合名と InstanceId を渡す）
    params = {
        PARAM_NAME:   [instance_id],   # 例: "UnhealthyInstanceId": ["i-xxxx"]
        "AlarmName":  [comp]           # 複合アラーム名も渡す
    }
    kwargs = dict(DocumentName=RUNBOOK_NAME, DocumentVersion=RUNBOOK_VERSION, Parameters=params)
    if AUTOMATION_ROLE_ARN:
        kwargs["AutomationAssumeRole"] = AUTOMATION_ROLE_ARN

    resp = ssm.start_automation_execution(**kwargs)
    log.info({"AutomationExecutionId": resp["AutomationExecutionId"], "InstanceId": instance_id, "Composite": comp})
    return {"ok": True, "automationExecutionId": resp["AutomationExecutionId"], "instanceId": instance_id, "composite": comp}