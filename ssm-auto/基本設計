了解。反映して**基本設計書 v1.2（最終）**に更新したよ。
追記点：**起動テンプレート使用**／**フェイルバック＝同Runbookを手動実行（1aへ戻す）**／**DNS A と CloudWatch アラームは自動切替**。

---

# 基本設計書（SSMオートメーション フェイルオーバー設計）v1.2

## 1. 目的

* シングル構成の4サーバ（認証/連携/運用管理/ディレクトリ）で障害時に**RTO≤30分**でフェイルオーバー（FO）。
* **0:00–7:00 JST** は自動FOを**抑止**（Change Calendar＋時刻ゲート）。
* SLO基準：**30分×30回/年 ≒ 99.83%**。

## 2. 対象と復旧判定

| 役割            | 復旧可否の判定（ALB経由）                          |
| ------------- | --------------------------------------- |
| 認証（webOTX）    | ログイン画面表示（HTTP 200＋タイトル一致）＋webOTX起動バッチ成功 |
| 連携（jobcenter） | ログイン画面到達（200＋タイトル一致）                    |
| 運用管理          | 暫定：疎通200（後日具体化）                         |
| ディレクトリ（EIM）   | ログイン画面到達（200＋タイトル一致）                    |

※ 認証のみ本バッチでサービス起動。他はダミーバッチで証跡確保。

## 3. 監視・トリガ（複合アラーム）

* 子アラーム候補：EC2 StatusCheck、EC2状態変化、TG HealthyHostCount、ALB 5XX/遅延、Windowsサービス（SCM 7036/7040→メトリクス）、AWS Health（AZ）。
* **複合アラーム1本でOR集約** → EventBridge → **Lambda（抑止/冪等/整形）** → **SSM Automation** → SNS。

## 4. 全体フロー

```
CloudWatch 複合
  → EventBridge
  → Lambda（Change Calendar＋時刻、ClientToken冪等）
  → SSM Automation（Runbook）
  → SNS（開始/成功/失敗）
```

## 5. フェイルオーバー Runbook（黒箱責務）

**入力（最小）**
`FailedInstanceId`, `Role(Auth|Relay|Ops|Dir)`, `PreferredAZ`, `LaunchTemplateId/Version`, `AmiParamKey`（Parameter StoreのAMI参照キー）, `TargetGroupArn`, `HostedZoneId`, `RecordName`, `ServiceBatchS3Uri`, `TimeoutSecondsEach`

**処理**

1. 抑止確認（Change Calendar＋0–7時は中断）
2. 障害インスタンスを**TGから切離し → 停止**
3. **起動テンプレート（Launch Template）**＋**Parameter Store の AMI**で**別AZ**に**新EC2起動**

   * AMIは `AmiParamKey` から取得（宣言的管理）
4. **SSM Online待ち** → **バッチ実行**（認証=webOTX起動／他=ダミー）
5. **TG登録 → Healthy待ち**
6. **DNS Aレコード UPSERT**（必要時）
7. **CloudWatchアラームの InstanceId を新へ切替**
8. **アプリ疎通判定**（§2基準）
9. SNS通知（開始/成功/失敗）

## 6. フェイルバック（FB）— 同一Runbookを**手動実行**

* **考え方**：FOと**同じ手順**で**元AZ（例：ap-northeast-1a）**へ戻す。
* **手順（運用）**

  1. FO後の新旧で**設定/データ整合を確認**
  2. **障害発生インスタンス（旧）を削除**（同一プライベートIP再利用のため）
  3. **運用者がSSM Automationを手動起動**（`PreferredAZ=1a` を指定）
  4. Runbookが**起動テンプレート＋Parameter StoreのAMI**で1aに新EC2を起動
  5. **DNS A**と**CloudWatchアラーム**は**Runbook内の処理で自動切替**
  6. TG Healthy＋疎通200（タイトル一致）で復帰完了

> 失敗時はFO側の稼働継続（安全側に倒す）。

## 7. 構成・IAM

* **Parameter Store**：`/system/<env>/<role>/latestAmiId` 等でAMI ID管理（起動テンプレートとRunbookが参照）。
* **Lambda ロール**：`ssm:StartAutomationExecution`、`sns:Publish` 等最小権限。
* **AutomationAssumeRole**：EC2（Run/Stop/Describe）、ELBv2（Register/Deregister/Describe）、Route53（ChangeResourceRecordSets/Describe）、CloudWatch（Put/DescribeAlarm）、SNS（Publish）。
* **CloudWatch Agent（CWConfig）**：Windowsサービス稼働メトリクス化＋SCMログ収集。

## 8. 採用理由（要約）

* **ASGのみ**では、**夜間抑止／DNS・監視付替／Windowsサービス起動／AMIの宣言管理**などの**運用要件を網羅できない**。
* **EventBridge＋Lambda＋SSM Automation**で**順序立てた手続き**と**監査・冪等性**を確保。

## 9. 未決・次回

* しきい値（連続N分・X/Y）／疎通URL・タイトル／Parameter Storeキー命名／CW Agent設定詳細／DNS TTL。

---

これで**基本設計は完了**。
次回は「しきい値」「URL/タイトル」「Parameter Storeキー」「CWConfig」の数字と文字列を埋めれば詳細設計へ進める。
